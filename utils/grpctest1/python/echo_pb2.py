# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: echo.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='echo.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\necho.proto\"H\n\x0b\x45\x63hoRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1a\n\x04type\x18\x02 \x01(\x0e\x32\x0c.commandType\x12\x0f\n\x07payload\x18\x03 \x01(\x0c\"f\n\tEchoReply\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1a\n\x04type\x18\x02 \x01(\x0e\x32\x0c.commandType\x12\x1e\n\x06status\x18\x03 \x01(\x0e\x32\x0e.commandStatus\x12\x0f\n\x07payload\x18\x04 \x01(\x0c**\n\x0b\x63ommandType\x12\x08\n\x04PING\x10\x00\x12\x07\n\x03\x43MD\x10\x01\x12\x08\n\x04\x44\x41TA\x10\x02*&\n\rcommandStatus\x12\x0b\n\x07SUCCESS\x10\x00\x12\x08\n\x04\x46\x41IL\x10\x01\x32\x35\n\x0b\x45\x63hoService\x12&\n\x04\x45\x63ho\x12\x0c.EchoRequest\x1a\n.EchoReply\"\x00(\x01\x30\x01\x62\x06proto3')
)

_COMMANDTYPE = _descriptor.EnumDescriptor(
  name='commandType',
  full_name='commandType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PING', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CMD', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DATA', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=192,
  serialized_end=234,
)
_sym_db.RegisterEnumDescriptor(_COMMANDTYPE)

commandType = enum_type_wrapper.EnumTypeWrapper(_COMMANDTYPE)
_COMMANDSTATUS = _descriptor.EnumDescriptor(
  name='commandStatus',
  full_name='commandStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAIL', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=236,
  serialized_end=274,
)
_sym_db.RegisterEnumDescriptor(_COMMANDSTATUS)

commandStatus = enum_type_wrapper.EnumTypeWrapper(_COMMANDSTATUS)
PING = 0
CMD = 1
DATA = 2
SUCCESS = 0
FAIL = 1



_ECHOREQUEST = _descriptor.Descriptor(
  name='EchoRequest',
  full_name='EchoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='EchoRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='EchoRequest.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='payload', full_name='EchoRequest.payload', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14,
  serialized_end=86,
)


_ECHOREPLY = _descriptor.Descriptor(
  name='EchoReply',
  full_name='EchoReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='EchoReply.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='EchoReply.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='EchoReply.status', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='payload', full_name='EchoReply.payload', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=88,
  serialized_end=190,
)

_ECHOREQUEST.fields_by_name['type'].enum_type = _COMMANDTYPE
_ECHOREPLY.fields_by_name['type'].enum_type = _COMMANDTYPE
_ECHOREPLY.fields_by_name['status'].enum_type = _COMMANDSTATUS
DESCRIPTOR.message_types_by_name['EchoRequest'] = _ECHOREQUEST
DESCRIPTOR.message_types_by_name['EchoReply'] = _ECHOREPLY
DESCRIPTOR.enum_types_by_name['commandType'] = _COMMANDTYPE
DESCRIPTOR.enum_types_by_name['commandStatus'] = _COMMANDSTATUS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

EchoRequest = _reflection.GeneratedProtocolMessageType('EchoRequest', (_message.Message,), dict(
  DESCRIPTOR = _ECHOREQUEST,
  __module__ = 'echo_pb2'
  # @@protoc_insertion_point(class_scope:EchoRequest)
  ))
_sym_db.RegisterMessage(EchoRequest)

EchoReply = _reflection.GeneratedProtocolMessageType('EchoReply', (_message.Message,), dict(
  DESCRIPTOR = _ECHOREPLY,
  __module__ = 'echo_pb2'
  # @@protoc_insertion_point(class_scope:EchoReply)
  ))
_sym_db.RegisterMessage(EchoReply)



_ECHOSERVICE = _descriptor.ServiceDescriptor(
  name='EchoService',
  full_name='EchoService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=276,
  serialized_end=329,
  methods=[
  _descriptor.MethodDescriptor(
    name='Echo',
    full_name='EchoService.Echo',
    index=0,
    containing_service=None,
    input_type=_ECHOREQUEST,
    output_type=_ECHOREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ECHOSERVICE)

DESCRIPTOR.services_by_name['EchoService'] = _ECHOSERVICE

# @@protoc_insertion_point(module_scope)
