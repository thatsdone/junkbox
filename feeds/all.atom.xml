<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>That's Done!</title><link href="https://thatsdone.github.io/junkbox/" rel="alternate"></link><link href="https://thatsdone.github.io/junkbox/feeds/all.atom.xml" rel="self"></link><id>https://thatsdone.github.io/junkbox/</id><updated>2019-10-03T14:30:00+09:00</updated><subtitle>thatsdone's (mostly technical) memorandum</subtitle><entry><title>[ja] SRECon19 EMEA</title><link href="https://thatsdone.github.io/junkbox/srecon19emea.html" rel="alternate"></link><published>2019-10-03T14:30:00+09:00</published><updated>2019-10-03T14:30:00+09:00</updated><author><name>thatsdone</name></author><id>tag:thatsdone.github.io,2019-10-03:/junkbox/srecon19emea.html</id><summary type="html">&lt;p&gt;SRECon19EMEA&lt;/p&gt;</summary><content type="html">&lt;p&gt;アイルランドのダブリンで開催中の &lt;a href="https://www.usenix.org/conference/srecon19emea/"&gt;SRECon19EMEA&lt;/a&gt; に来ています。&lt;/p&gt;
&lt;p&gt;ダブリンは初めてで、気温をみて寒そう…とは思っていたのですが、10月頭でもう冬みたいな恰好をしている人が多いとは想像しておらず、
正直、外は寒いです(苦笑)&lt;/p&gt;
&lt;p&gt;初日で一番面白かったのはGoogleの Todd Underwood さんの以下のセッションでしょうか。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.usenix.org/conference/srecon19emea/presentation/underwood"&gt;All of Our ML Ideas Are Bad (and We Should Feel Bad)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MLを使って運用をラクにしたい…というのはけっこう誰でも考える話で、適用対象としては例えば以下のようなものがあるでしょう&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Categorizing/Prioritizing Tickets&lt;/li&gt;
&lt;li&gt;Root Cause Analysis&lt;/li&gt;
&lt;li&gt;Canary Analysis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;しかし、実際に使ってみると...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;(MLよりも)もっといい方法ある&lt;/li&gt;
&lt;li&gt;データが足りない&lt;/li&gt;
&lt;li&gt;ラベル付きのデータが足りない&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;といった理由でうまくいかないことがよくあります。&lt;/p&gt;
&lt;p&gt;Todd さんは、これは流行りのやり方を、深く考えずにそのまま使おうとするからだ…と言います。
よく言われる ML というのは、Marketing ML だと。&lt;/p&gt;
&lt;p&gt;Todd さんのおすすめはこんなふうにまとめられます。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Think&lt;ul&gt;
&lt;li&gt;あなたのアプリ、インフラ、お客さんをよく知る人に話を聞きましょう。&lt;/li&gt;
&lt;li&gt;そして、それらを理解するためのアイデアを出すためにブレストをしましょう。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Gather&lt;ul&gt;
&lt;li&gt;まずはデータを一か所にあつめる。&lt;/li&gt;
&lt;li&gt;整理してみないとなにもできないので、とにかく整理する。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Learn&lt;ul&gt;
&lt;li&gt;まずは基本を押さえましょう。&lt;/li&gt;
&lt;li&gt;MLワークロードを動かすプラットフォームは既にたくさんあるので、こういうものを知りましょう。&lt;/li&gt;
&lt;li&gt;そして、集めたデータを使ってプロトタイプをやってみましょう。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;もっと先まで踏み込む場合は&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ontology&lt;/li&gt;
&lt;li&gt;Epistemology&lt;/li&gt;
&lt;li&gt;Metaphysics&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;の３点を挙げていました。用語は難しいですが、一言で言うと「自分の頭で本質をよく考えろ」ってことですね。 :)
具体的にこうしたらうまくいっているよ…という事例紹介ではありませんが、考え方として、私にはとても参考になったtalkでした。&lt;/p&gt;
&lt;p&gt;Day1 だけでも他にもいろいろ興味深い講演がありました。
例えば、Network trouble の解析の紹介で、よく聞いてみたら eBPF でがんばってCloud Providerにも認めさせたぜ...という
「よくある」話だったりとか(笑)
ぼちぼち更新しようかと思います。&lt;/p&gt;
&lt;p&gt;Stay Tuned ! :)&lt;/p&gt;
&lt;p&gt;2019/10/04 (Dublin現地時間)追記&lt;/p&gt;
&lt;p&gt;SRECon19EMEA、無事に終了しました。
ハリケーンが来ていてアイルランド直撃が予測されいたのですが、大した影響なく済んでよかったです。&lt;/p&gt;
&lt;p&gt;closing での主催者の話によると、今回の出席者は約700名とのこと。3月のNorth Americaでは4桁に届くでしょうか。&lt;/p&gt;
&lt;p&gt;3日間終わってみての所感は、初日のkeynoteのLeverson教授の Systems Theory からはじまり、
Control Theory (制御理論)、Fault Tree Analysis といった、数十年前に確立された理論を振り返る話が多かったことです。
果ては一番最後のセッションが Formal Verification Method...ということで、Program Committee の心意気を感じたように思います。&lt;/p&gt;
&lt;p&gt;私は主に Core Principle の Track に出ていました。具体的にこの手法でうまくいったよ…という話もあることはありましたが、
むしろ Silver Bullet はない。利用者のことをよく知り、自分の頭で考えるべし。ついてはその指針は…という話を多く聞くことができました。
現状の私には非常に参考になる話でした。&lt;/p&gt;
&lt;p&gt;3月の SRECon '20 North America はスケジュールの都合で出席できないのですが、来年度もどれかのSREConに顔を出したいと思います。 :)&lt;/p&gt;</content></entry><entry><title>[ja] Light Novels</title><link href="https://thatsdone.github.io/junkbox/light_novel.html" rel="alternate"></link><published>2019-09-29T18:00:00+09:00</published><updated>2019-09-29T18:00:00+09:00</updated><author><name>thatsdone</name></author><id>tag:thatsdone.github.io,2019-09-29:/junkbox/light_novel.html</id><summary type="html">&lt;p&gt;Light Novels, so called La-Nobe in Japan / ラノベ話(その１)&lt;/p&gt;</summary><content type="html">&lt;p&gt;ここ１年ほど、隙間時間はラノベを読んでいることが多いです。&lt;/p&gt;
&lt;p&gt;その昔は、ラノベは敬遠していたのですが、幼女戦記のアニメをチラ見した後、原作を読み、他にも…といろいろ読みはじめたらハマってしまいました(笑)&lt;/p&gt;
&lt;p&gt;これまで読んだものはけっこうな量になるのですが、以下はとりあえず印象に残ったもののリストです。そのうちもっと増やすかも(笑)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.mai-net.net/bbs/sst/sst.php?act=dump&amp;amp;cate=tiraura&amp;amp;all=24734"&gt;幼女戦記&lt;/a&gt; (完結済)&lt;ul&gt;
&lt;li&gt;言わずと知れた「幼女戦記」の原点。転生もの。コミックもアニメも好きですが、私はやっぱりこれが一番面白いですかねぇ。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/4852201425154885756"&gt;魔法大学院第三呪術研究室には研究費がない&lt;/a&gt; (完結済)&lt;ul&gt;
&lt;li&gt;研究者ファンタジーとでも言えるでしょうか。これは転生は関係なく、自然科学に魔法とか呪術とかが普通に混ざりこんだ世界での博士課程の学生の奮闘話。「『魔研費』におちた」...とか、泣けます。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054887903142"&gt;辺境の老騎士&lt;/a&gt; (完結済)&lt;ul&gt;
&lt;li&gt;グルメファンタジーとか言われているようです。これも転生は関係なく、辺境で隠居した...はずの老騎士が活躍する話。後半SFっぽくなります。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054886942969"&gt;この争いの絶えない世界で　～魔王になって平和の為に戦います&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;転生もの。転生先で魔王になりますが、よくある異世界ファンタジーとは趣がだいぶ異なります。キーワードは「魔王というシステム」でしょうか。とても面白いです。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054884195461"&gt;公女殿下の家庭教師&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;転生もなしの、普通の異世界ファンタジー。ストーリーが面白いのと、軽妙な語り口で人気があり、書籍版も出ているようです。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054885338663"&gt;転生したらスキルになっていた！？　～　モニカの奇妙な相棒　～&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;転生もの。ただし、普通は主人公本人に転生するわけですが、転生先の魔法ファンタジー世界のキャラクタが使う「スキル」に転生したというのが他と違うところです。これもすごく面白いです。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054885639750"&gt;ジェミノシストーリア　～化学で捗る魔術開発～&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;転生もの。化学研究者がファンタジー系の異世界転生する話。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054880833903"&gt;異世界城主、奮闘中！　～ガチャ姫率いて、目指すは最強の軍勢～（旧題ガチャ姫）&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;転生もの。「仲間、ダイジ！」系、かつハーレムっぽいですが、面白いです。'19/9時点で作者の方は新作に力を入れているようで更新停止中ですが、再開されないかなぁ。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054882530555"&gt;リビルドワールド&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;SF。ミュータントが跋扈する未来世界で、旧世界の秘密にヒロイン(?)と一緒に挑むハンターの話。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054885808737"&gt;鉄錆びの女王機兵&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;SF。ミュータントが跋扈する近未来世界で、四肢を戦車に接続して戦うヒロインと、不器用なハンターの話。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054883170654"&gt;異邦人、ダンジョンに潜る。&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;転生...ではなく、魔法な異世界に送り込まれたところが違うところ。SFのような異世界ファンタジーのような話。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054880231475"&gt;Hi-G. -ハイスピードガールズ ディスタンス-&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;21世紀の女子高生(ただし、戦闘素養は抜群？)が2500年後に転移(?)した話。スぺオペ…かな。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054888551001"&gt;神様のモニタリング　～人類滅亡回避のススメ～&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;転生もの。転生させる神様が被転生者のモニタリングをしている…という設定。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054886331107"&gt;放浪者達の狂騒曲&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;転生...というか、だいぶ未来の異惑星(だだし、地球から軍隊を送り込まれて数百年)に転移(?)した主人公が、だいぶ昔に地球から送り込まれたAI搭載野良(?)戦車と現地で頑張る話。アニメ系の各種ネタ満載ですが、私は半分もついていけません(笑)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ncode.syosetu.com/n4343eh/"&gt;ソ連の宇宙技術は最強過ぎたのだが、それを西側諸国が完全に理解したのはつい最近だった&lt;/a&gt; (完結済)&lt;ul&gt;
&lt;li&gt;ラノベ(?)としては変わりダネ。最初見た時、宇宙技術系の知る人ぞ知るうんちく解説記事だと思ったのですが、まさかweb小説だったとは...(笑)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054884501019"&gt;異世界辺境経営記&lt;/a&gt; (完結済)&lt;ul&gt;
&lt;li&gt;転生もの。異世界「経済」ファンタジー…かな？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kakuyomu.jp/works/1177354054887659844"&gt;空言ミストノーツ&lt;/a&gt; (完結済)&lt;ul&gt;
&lt;li&gt;異世界ファンタジー。転生なし。この世界観、とても好き。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>[ja] BGP in the Data Center</title><link href="https://thatsdone.github.io/junkbox/bgp_in_the_datacenter.html" rel="alternate"></link><published>2019-09-21T20:00:00+09:00</published><updated>2019-09-21T20:00:00+09:00</updated><author><name>thatsdone</name></author><id>tag:thatsdone.github.io,2019-09-21:/junkbox/bgp_in_the_datacenter.html</id><summary type="html">&lt;p&gt;BGP in the Data Center&lt;/p&gt;</summary><content type="html">&lt;p&gt;一部で話題の O'reily の "BGP in the Data Center" を読んだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[https://www.oreilly.com/library/view/bgp-in-the/9781491983416/(https://www.oreilly.com/library/view/bgp-in-the/9781491983416/)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これは面白い…というか、自分が今やってること的にとても勉強になったのでメモ。&lt;/p&gt;
&lt;p&gt;日本語の他の方の記事もけっこうあるようだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://foobaron.hatenablog.com/entry/bgp-in-the-data-center-01"&gt;https://foobaron.hatenablog.com/entry/bgp-in-the-data-center-01&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.bobuhiro11.net/2019/03-21-bgp-in-the-data-center.html"&gt;https://blog.bobuhiro11.net/2019/03-21-bgp-in-the-data-center.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;遡ると'14の JANOG33 で Microsoft の人が講演していたりとか。(時期はこの本よりも早い)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.janog.gr.jp/meeting/janog33/program/bgp.html"&gt;https://www.janog.gr.jp/meeting/janog33/program/bgp.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1. Introduction to Data Center Networks&lt;/h3&gt;
&lt;p&gt;物理構成の話。L3 Leaf-Spine 型のNWの構成のベストプラクティスの解説。&lt;/p&gt;
&lt;h3&gt;2. How BGP Has Benn Adapted to the Data Center&lt;/h3&gt;
&lt;p&gt;物理構成ができたら、その上の routing をどうやるのか？の話。BGP話。&lt;/p&gt;
&lt;p&gt;しかし、BGPの Best Path Algorithm が参照する metric が8つあって、それを覚えるのにこんなのがあるとは知らなかったw
Cisco(当時?)の Denise Fishburne さんが考えたらしい。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;mnemonic&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;BGP metric&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Wise&lt;/td&gt;
&lt;td&gt;W&lt;/td&gt;
&lt;td&gt;Weight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lisp&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;td&gt;LOCAL_PREFERENCE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lovers&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;td&gt;Locally Originated&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Apply&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;AS_PATH&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Oral&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;td&gt;ORIGIN&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Medication&lt;/td&gt;
&lt;td&gt;M&lt;/td&gt;
&lt;td&gt;MED&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Every&lt;/td&gt;
&lt;td&gt;E&lt;/td&gt;
&lt;td&gt;eBGP over iBGP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Night&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;NextHop IGP Cost&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;(うー、Pelican の調整がまだ不完全で border が出ないな...)&lt;/p&gt;
&lt;h3&gt;3. Building an Automatable BGP Configuration&lt;/h3&gt;
&lt;p&gt;各router (というか、TOR/Leaf/Spine等スイッチ)の BGP 設定は、
愚直に書くと機器ごとに個別の設定や、個別の機器内でも重複した記述が多数出てくるわけだが、
これを自動化のためにカイゼンできるか？の解説。&lt;/p&gt;
&lt;p&gt;Spine側のASNの割り当てはちょっと誤解していたところがあった...&lt;/p&gt;
&lt;h3&gt;4. Reimaging BGP Configuration&lt;/h3&gt;
&lt;p&gt;3章の解説でもろもろ設定を単純化したとして、まだ以下のような pain point がある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NW機器間(というか、ホストも含むかな...)のインターフェースに付与して管理するのは大変。&lt;/li&gt;
&lt;li&gt;隣(neighbour)のASの定義をいちいち書くのも大変。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一つ目の問題の解決として、(IPv6) Un-Numbered の解説。&lt;/p&gt;
&lt;p&gt;二つめの問題の解決として、remote-as 構文の拡張の external / internal を使う方法の解説。&lt;/p&gt;
&lt;p&gt;ちな、僕が読んだバージョンの p58 の Figure 4-2 の下半分の図は 10.1.1.0/24 じゃなくて、10.1.2.0/24 だと思う。&lt;/p&gt;
&lt;h3&gt;5. BGP Life Cycle Mamagement&lt;/h3&gt;
&lt;p&gt;状態表示でよく使うコマンドのほか、メンテのために停止させたい時の常套手段と、デバッグのやりかた。&lt;/p&gt;
&lt;p&gt;デバッグ用の機能を使って、経路計算のロジックを勉強する…というのもあるのか。&lt;/p&gt;
&lt;h3&gt;6. BGP on the Host&lt;/h3&gt;
&lt;p&gt;この構成で本格的に動かす場合、ホストも BGP をしゃべることになるわけで、
今までのSEとNEという境界もあいまいになるよね…という話。&lt;/p&gt;
&lt;p&gt;そのほか、Anycast 話とか、Dynamic Neighbour とか。&lt;/p&gt;
&lt;p&gt;そういえば、題材に使われている &lt;a href="https://frrouting.org/"&gt;FRR&lt;/a&gt; を使い込む…
というタスクもあったのだが、再開せねば...(とおいめ&lt;/p&gt;</content></entry><entry><title>[ja] Stray Sheep - OpenShift and CloudFoundry</title><link href="https://thatsdone.github.io/junkbox/openshift_and_cloudfoundry.html" rel="alternate"></link><published>2019-09-14T15:01:00+09:00</published><updated>2019-09-14T15:01:00+09:00</updated><author><name>thatsdone</name></author><id>tag:thatsdone.github.io,2019-09-14:/junkbox/openshift_and_cloudfoundry.html</id><summary type="html">&lt;p&gt;Stray Sheep - OpenShift and Cloud Foundry (again?)&lt;/p&gt;</summary><content type="html">&lt;p&gt;こんな記事が話題になっているようだ。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://techcrunch.com/2019/09/12/together-at-last-ibm-brings-cloud-foundry-to-red-hat-openshift/"&gt;IBM brings Cloud Foundry and Red Hat OpenShift together&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;オレPaaSはこれだぜ…といって始まったはずが、kubernetes 使うならOpenShift…に言うことが全然変わり、そしてまた Cloud Foundry ですか…迷える子羊さんだなー…というのが第一印象。&lt;/p&gt;
&lt;p&gt;とはいえ、API(と、それで制御されるざっくりした構造も…かな)だけ維持して、既存のk8sベースのインフラでCF用に作られたアプリケーションを収容できるようにするというのは自然な発想と言えるかなと思うのだが、この動きって最初から計画されていたのか、それとも Cloud Foundry に大々的に投資していたIBMの意向なのか、どちらなんでしょう？
あと、OpenShiftの場合、Kuryr とか使ってOpenStackと並べて動かすみたいな話もあるようだし、ただでさえ重量級な
OpenShiftがますます複雑化しそうな雰囲気なのがちょっと...(とおいめ&lt;/p&gt;
&lt;p&gt;余談だけど、OpenShift の歴史、特に v1 と v2 の頃ってどんなんだっけ？とググっていたらこんな記事も出てきた。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.ibm.com/blogs/a-brief-history-of-red-hat-openshift/"&gt;A brief history of Kubernetes, OpenShift, and IBM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;これって、8/1付の記事なのだけど、最初の記事が 9/11-12の Cloud Foundry Summit 2019での &lt;em&gt;IBM&lt;/em&gt; による発表の記事なので、情報は先に出ていた...ということですか。&lt;/p&gt;
&lt;p&gt;ところで、１つめの記事から、こんな記事もリンクされていた。&lt;/p&gt;
&lt;p&gt;[With its Kubernetes bet paying off, Cloud Foundry doubles down on developer experience]
(https://techcrunch.com/2019/09/09/with-its-kubernetes-bet-paying-off-cloud-foundry-double-down-on-developer-experience/)&lt;/p&gt;
&lt;p&gt;Fortune 500に載る会社の50%以上がCloud Foundry使っているって本当？…というのはおいておいて、
PivotalもCloud Foundryをk8sの上で動かすぜー…なんて言っていたのね。知りませんでした...orz&lt;/p&gt;
&lt;p&gt;&lt;a href="https://content.pivotal.io/announcements/pivotal-makes-kubernetes-easier-for-developers-and-operators"&gt;Pivotal Makes Kubernetes Easier for Developers and Operators&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>[ja] Science</title><link href="https://thatsdone.github.io/junkbox/on_science.html" rel="alternate"></link><published>2019-09-12T23:00:00+09:00</published><updated>2019-09-12T23:00:00+09:00</updated><author><name>thatsdone</name></author><id>tag:thatsdone.github.io,2019-09-12:/junkbox/on_science.html</id><summary type="html">&lt;p&gt;Scientific topics&lt;/p&gt;</summary><content type="html">&lt;p&gt;私は物理系の出身ということもあって、テクノロジ系だけではなく自然科学系の話題にも興味があります。&lt;/p&gt;
&lt;p&gt;最近気になった記事だとたとえばこんなのがありました。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://singularityhub.com/2019/04/24/new-lifelike-biomaterial-self-reproduces-and-has-a-metabolism/"&gt;"New Lifelike Biomaterial Self-Regenerates and Has a Metabolism"&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;生物の要件の１つである自己複製を行うようなものを作り出したと。
メカニズムとして、生成と破壊が同時進行する新陳代謝の機能を備えている...というわけで、これって既に、Virus よりも普通の生き物に近いと思うのですが、そうすると、"life-like" と "alive" の境界ってなんだろう...とか思うわけです。&lt;/p&gt;</content></entry><entry><title>[ja] On OpenSDS</title><link href="https://thatsdone.github.io/junkbox/opensds.html" rel="alternate"></link><published>2019-09-03T00:00:00+09:00</published><updated>2019-09-03T00:00:00+09:00</updated><author><name>thatsdone</name></author><id>tag:thatsdone.github.io,2019-09-03:/junkbox/opensds.html</id><summary type="html">&lt;p&gt;My recent OpenSDS related activities&lt;/p&gt;</summary><content type="html">&lt;p&gt;最近は趣味と実益を兼ねて &lt;a href="https://opensds.io/"&gt;OpenSDS&lt;/a&gt; をいじっています。&lt;/p&gt;
&lt;p&gt;OpenSDS は、名前からして「また新しい Software Defined Storage の実装ですか？」と聞かれるのですが、実は複数のストレージコントローラをたばねるものです。
block storage から出発して、今はNFSのような file storage や Object Storage もサポートしています。&lt;/p&gt;
&lt;p&gt;その昔いじっていたOpenStackも sub project がたくさんありましたが、OpenSDS もだいぶにぎやかになってきました。&lt;/p&gt;
&lt;p&gt;この中では telemetry と anomaly-detection (仕事的には multi-cloudも) に興味があるのですが、まずは簡単に使えるようにしなくちゃね...ということで、
githubの私のページの activity を見てもらってもわかる通り、
opensds-installer をせっせと直しています。まずは ansible で、helm chart はその次ですかね...&lt;/p&gt;
&lt;p&gt;余談ですが、現在、OpenSDSの認証には OpenStack の Keystone が導入されています。
Keystone の場合、認証した結果に各種関連サービスの endpoint の一覧が返却される
という変わった(?)仕様なのですが、このあたり、どこまで integration するかは
まだやわらかいようです。&lt;/p&gt;</content></entry><entry><title>[en/ja] Resuming github pages</title><link href="https://thatsdone.github.io/junkbox/resuming.html" rel="alternate"></link><published>2019-09-02T22:50:00+09:00</published><updated>2019-09-02T22:50:00+09:00</updated><author><name>thatsdone</name></author><id>tag:thatsdone.github.io,2019-09-02:/junkbox/resuming.html</id><summary type="html">&lt;p&gt;resuming this page after several years interval&lt;/p&gt;</summary><content type="html">&lt;p&gt;[en]
I'm resuming this github page after several years interval.
Recent my (technical) interests are below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connected Cars /Autonomous Cars&lt;/li&gt;
&lt;li&gt;Open Source&lt;/li&gt;
&lt;li&gt;MLOps&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[ja]
数年ぶりにこのページの更新を再開しようと思います。
最近の興味は以下のような感じです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connected Cars /Autonomous Cars&lt;/li&gt;
&lt;li&gt;Open Source&lt;/li&gt;
&lt;li&gt;MLOps&lt;/li&gt;
&lt;li&gt;等&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>About Me</title><link href="https://thatsdone.github.io/junkbox/about.html" rel="alternate"></link><published>2019-09-01T00:00:00+09:00</published><updated>2019-09-01T00:00:00+09:00</updated><author><name>thatsdone</name></author><id>tag:thatsdone.github.io,2019-09-01:/junkbox/about.html</id><summary type="html">&lt;p&gt;about me&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm a kind of software engineer and researcher.&lt;/p&gt;
&lt;p&gt;Since April of 2018, I'm working on mainly infrastructure things shooting for
DataCenter side of Connected Car/Autonomous Car systems.&lt;/p&gt;</content></entry></feed>